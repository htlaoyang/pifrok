(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{503:function(s,n,e){"use strict";e.r(n);var a=e(9),l=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"一-openssl的编译安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-openssl的编译安装"}},[s._v("#")]),s._v(" 一  Openssl的编译安装")]),s._v(" "),e("p",[s._v("1.下载perl(二选一)")]),s._v(" "),e("p",[s._v("A Strawberry Perl（推荐）\n下载网址： http://strawberryperl.com/\nB ActiveState Perl：缺模块。\n下载网址：https://www.activestate.com/activeperl/downloads\n安装并将其安装路径加入到到系统环境变量Path中.")]),s._v(" "),e("p",[s._v("2.安装NASM\n地址：http://www.nasm.us/\n当前稳定版本为：2.12.02\nhttp://www.nasm.us/pub/nasm/releasebuilds/2.12.02/win64/")]),s._v(" "),e("p",[s._v("nasm-2.12.02-installer-x64.exe\nnasm-2.12.02-win64.zip")]),s._v(" "),e("p",[s._v("安装并将其安装路径加入到到系统环境变量Path中.例如：C:\\NASM")]),s._v(" "),e("p",[s._v("3.下载OpenSSL\n地址：https://www.openssl.org/source/old/1.1.1/\n下载最新版本，将其解压缩至自己的目录下，建议目录不含中文名和空格，")]),s._v(" "),e("p",[s._v("4.openssl编译")]),s._v(" "),e("p",[s._v("用管理员打开“适用于 VS 2012 的 x64 本机工具命令提示”，到openssl源码目录\n依次执行以下命令[源码目录D:\\DLL\\openssl-1.1.1f]")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("   cd /d  D:\\DLL\\openssl-1.1.1f \n   perl Configure VC-WIN64A  shared no-asm\n   nmake\n   nmake test\n   nmake install\n")])])]),e("p",[s._v("不编译汇编代码，所以加上了 no-asm 参数。\n对于x64架构的CPU，使用 VC-WIN64A 参数；对于 IA 64 架构的CPU，使用 VC-WIN64I 参数。\n默认情况下，编译好的 64 位文件会被拷贝到 C:\\Program Files\\OpenSSL 路径下，包含四个子目录（bin,include,lib,ssl）\n至此，openssl编译与安装工作到此完成。")]),s._v(" "),e("p",[s._v("注：网上有很多关于windows系统编译openssl的教程贴，在创建Makefile这一步中，讲到的都是使用")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("   ms\\do_ms\n   ms\\do_masm\n   ms\\do_nasm\n")])])]),e("p",[s._v("这之类的命令，在编译时输入这些的命令都是提示找不到这些命令，\n按照网上的说法也重新去安装了一些编译器，结果是统统无效。原来从openssl 1.1.0版本以后就不再有ms\\do_*.bat这样的文件，\n而是直接使用nmake命令就行了，原文贴上来：")]),s._v(" "),e("p",[s._v("（1）、x32 compilation on Windows:")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("   perl Configure VC-WIN32\n   nmake\n   nmake test\n")])])]),e("p",[s._v("（2）、x64A compilation on Windows:")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("   perl Configure VC-WIN64A\n   nmake\n   nmake test\n")])])]),e("h2",{attrs:{id:"二-vs2012上环境搭建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-vs2012上环境搭建"}},[s._v("#")]),s._v(" 二  Vs2012上环境搭建")]),s._v(" "),e("ol",[e("li",[s._v("VS项目中配置openssl\n解决方案资源管理器中选中项目-》右键弹出菜单-》属性")])]),s._v(" "),e("p",[s._v("（1）、引入包含目录\nVC++目录--》包含目录项，增加openssl目录下的include文件夹路径")]),s._v(" "),e("p",[s._v("（2）、引入库目录\nVC++目录--》库目录项，增加openssl目录下的lib文件夹路径")]),s._v(" "),e("p",[s._v("（3）、引入连接器\n链接器--》输入--》附加依赖项，增加libcrypto.lib、libssl.lib（这两个库在openssl下的lib文件夹路径下).")]),s._v(" "),e("p",[s._v("注： libeay32.lib和ssleay32.lib 是1.0.x中的名称\n1.1.x版本后变更为libcrypto.lib、libssl.lib")]),s._v(" "),e("ZanShang")],1)}),[],!1,null,null,null);n.default=l.exports}}]);